/**
 * Class for getting weather data using OpenWeatherMap
 * @see http://openweathermap.org/current
 */'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var OpenWeatherMap=(function(){function OpenWeatherMap(){var units=arguments.length <= 0 || arguments[0] === undefined?'imperial':arguments[0];var version=arguments.length <= 1 || arguments[1] === undefined?2.5:arguments[1];_classCallCheck(this,OpenWeatherMap);this.units = units;this.version = version;}_createClass(OpenWeatherMap,[{key:'getFromCoords',value:function getFromCoords(){var _this=this;var system=this.units === 'imperial'?'F':'C';var url=new URL('http://api.openweathermap.org/data/' + this.version + '/weather');var headers=new Headers();OpenWeatherMap.getLocation().then(function(location){console.log(location);url.searchParams.set('lat',location.coords.latitude);url.searchParams.set('lon',location.coords.longitude);url.searchParams.set('units',_this.units);fetch(url,{method:'GET',mode:'cors',headers:headers}).then(function(resp){if(resp.ok){var type=resp.headers.get('Content-Type').toLowerCase();if(type.startsWith('application/json')){return resp.json();}else {throw new Error('Unsupported Content-Type: ' + type);}}else {throw new Error(resp.status + ': ' + resp.statusText);}}).then(function(data){var main=document.querySelector('main');var city=document.createElement('h3');var temp=document.createElement('samp');temp.textContent = 'Current temperature: ' + data.main.temp.toFixed(1) + 'Â°' + system;city.textContent = 'Current weather in ' + data.name;main.appendChild(city);main.appendChild(temp);console.dir(data);});})['catch'](function(err){return console.error(err);});}}],[{key:'getTemp',value:function getTemp(temp){var to=arguments.length <= 1 || arguments[1] === undefined?'Fahrenheit':arguments[1];var from=arguments.length <= 2 || arguments[2] === undefined?'Kelvin':arguments[2];if(from === to){return temp;}else {switch(to){case 'Fahrenheit':switch(from){case 'Kelvin':return (temp - 273.15) * 1.8 + 32;case 'Celsius':return temp * 1.8 + 32;}case 'Celsius':switch(from){case 'Fahrenheit':return (temp - 32) / 1.8;case 'Kelvin':return temp + 273.15;}case 'Kelvin':switch(from){case 'Fahrenheit':return (temp - 32) / 1.8 + 273.15;case 'Celsius':return temp + 273.15;}}}}},{key:'getLocation',value:function getLocation(){var options=arguments.length <= 0 || arguments[0] === undefined?{}:arguments[0];return new Promise(function(success,fail){if(!('geolocation' in navigator)){fail('Your browser does not support GeoLocation');}navigator.geolocation.getCurrentPosition(success,fail,options);});}}]);return OpenWeatherMap;})();

//# sourceMappingURL=weather.js.map